## ライセンスファイルを指定してください
## この設定はオプションで、デフォルトは "etc/license.json" です
 license_file = etc/license.json
#
## 認証やイベントのウェブフックの通知に含まれるサーバ識別用のラベルを指定可能です
## 指定しない場合は "WebRTC SFU Sora" が送られます
# label = sora-label
#
## サーバで利用する IPv4 アドレスを指定してください
## 指定が無い場合は自動で見つけたアドレスを利用します
 ipv4_address = 192.168.10.156
#
## サーバでIPv6 アドレスを利用するかどうか指定してください
## この設定はシグナリングや API には影響しません
## この設定はオプションで、デフォルト false です
# ipv6 = true
#
## サーバで利用する IPv6 アドレスを指定してください
## 指定が無い場合で ipv6 が true の場合、自動で見つけたアドレスを利用します
# ipv6_address = 2001:0DB8::100
#
## 開発者ツールを有効にするかどうかを指定してください
## この設定はオプションで、デフォルト false です
 devtools = true
#
## 認証のコールバック URL を指定してください
# auth_webhook_url = http://127.0.0.1:8080/sora/auth/webhook
#
## セッションのコールバック URL を指定してください
# session_webhook_url = http://127.0.0.1:8080/sora/session/webhook
#
## セッションを処理するワーカー数を指定してください
## この設定はオプションで、デフォルトは 5 です
# session_webhook_worker_number = 5
#
## セッションが存在しない場合でセッション作成までのタイムアウト時間を指定してください
## この設定はオプションで、デフォルトは 5 s です
# session_created_timeout = 5 s
#
## 同時接続数が 0 になってからセッション終了までのタイムアウト時間を指定してください
## この設定はオプションで、デフォルトは 15 秒 (5 s) です
# session_destroyed_timeout = 15 s
#
## イベントのコールバック URL を指定してください
# event_webhook_url = http://127.0.0.1:8080/sora/event/webhook
#
## イベントを処理するワーカー数を指定してください
## この設定はオプションで、デフォルトは 5 です
# event_webhook_worker_number = 5
#
## 認証やイベントのウェブフックのレスポンスタイムアウトの値を指定してください
## この設定はオプションで、デフォルトは 5 秒 (5 s) です
# webhook_response_timeout = 30 s
#
## 認証やイベントのウェブフックに利用する HTTP ベーシック認証の情報を指定してください
# webhook_basic_authn = true
# webhook_basic_authn_user_id = basic-authn-user-id
# webhook_basic_authn_password = basic-authn-password
#
## 認証やイベントのウェブフックに利用する HTTP Proxy の情報を指定してください
# webhook_proxy_url = http://proxy.example.com:8080
# webhook_proxy_auth_user = proxy-auth-user
# webhook_proxy_auth_password = proxy-auth-password
#
## 接続の更新をコールバックを無視するかどうかを指定します
## この設定はオプションで、デフォルト false です
# ignore_connection_updated_webhook = true
#
## 接続時の失敗コールバックを無視するかどうかを指定します
## この設定はオプションで、デフォルト true です
# ignore_connection_failed_webhook = false
#
## セッションが存在しなくなったコールバックを無視するかどうかを指定します
## この設定はオプションで、デフォルト true です
# ignore_session_vanished_webhook = true
#
## スポットライト機能で切り替わりコールバックを無視するかどうかを指定します
## この設定はオプションで、デフォルト true です
# ignore_spotlight_changed_webhook = false
#
## 録画ファイルが保存されるディレクトリを指定してください
## 可能な限り絶対パスで指定してください
# archive_dir = archive
#
## 録画に利用する一時ファイルを保存するディレクトリを指定してください
## 可能な限り絶対パスで指定してください
# archive_tmp_dir = tmp/archive
#
## クラスター機能有効時に、永続化用のデータファイルが保存されるディレクトリを指定してください
##
## なお、このディレクトリ以下に生成されるファイルは Sora が内部的に使用するものであり、
## 運用者が触ることは想定されていません
# data_dir = data
#
## シグナリングに使うポート番号を指定してください
## この設定はオプションで、デフォルトは 5000 です
# signaling_port = 5000
#
## シグナリングへのアクセスをループバックアドレスからだけにするかどうかを指定して下さい
## この設定はオプションで、デフォルトは false です
# signaling_loopback_address_only = true
#
## シグナリング経由での通知を有効にするかどうか指定してください
# signaling_notify = false
#
## シグナリング経由での通知時にクライアント ID を払い出すかどうか指定してください
# signaling_notify_client_id = false
#
## シグナリング経由での通知時にバンドル ID を払い出すかどうか指定してください
# signaling_notify_bundle_id = false
#
## シグナリング経由での通知時にコネクション ID を払い出すかどうか指定してください
# signaling_notify_connection_id = false
#
## シグナリング経由での通知時にメディア情報を払い出すかどうか指定してください
# signaling_notify_media = false
#
## シグナリング経由での通知時にメタデータを払い出すかどうか指定してください
# signaling_notify_metadata = false
#
## シグナリング経由での通知時のメタデータを API 経由で拡張可能にするかどうかを指定して下さい
# signaling_notify_metadata_ext = false
#
## シグナリング経由でネットワークに関連する通知を受け取るかどうか指定してください
# signaling_notify_network = false
#
## シグナリング経由で RTP ストリームを停止/再開の通知を送るかどうか指定してください
## この設定はオプションで、デフォルトは true です
# signaling_notify_rtp_stream = false
#
## シグナリング経由で録画を開始/停止の通知を送るかどうか指定してください
## この設定はオプションで、デフォルトは true です
# signaling_notify_recording = false
#
## シグナリングをウェブソケット経由からデータチャネル経由へ切り替えるか指定してください
## この設定はオプションで、デフォルトは false です
# default_data_channel_signaling = true
#
## データチャネル有効時にウェブソケットの切断を接続切断の判断とするかを指定してください
## この設定はオプションで、デフォルトは false です
# default_ignore_disconnect_websocket = true
#
## シグナリングでバンドル ID を指定可能にするかどうかを指定してください
## この設定はオプションで、デフォルトは false です
# signaling_bundle_id = true
#
## データチャネル経由シグナリング利用時にメッセージング機能を利用するかどうかを指定してください
## この設定はオプションで、デフォルトは false です
 data_channel_messaging = true
#
## データチャネル経由シグナリング利用時にメッセージング機能のみを利用するかどうかを指定してください
## この設定はオプションで、デフォルトは false です
 data_channel_messaging_only = true
#
## API に使うポート番号を指定してください
## この設定はオプションで、デフォルトは 3000 です
 api_port = 3000
#
## API へのアクセスをループバックアドレスからだけにするかどうかを指定して下さい
## この設定はオプションでデフォルトは false です
# api_loopback_address_only = true
#
## API をクロスドメインで使用したい場合に、その URL を指定してください
# api_cors_origin = http://127.0.0.1:5000
#
## TURN 機能を有効にするかどうかを指定してください
 turn = true
#
## TURN 機能で利用するレルムを指定してください
# turn_realm = sora-turn.example.com
#
## TURN 機能で TURN URL 払い出し機能で利用する FQDN (最後の . なし)を指定してください
# turn_fqdn = sora-turn.example.com
#
## TURN 機能で TURN-TCP を有効にするかどうかを指定してください
turn_tcp = true
#
## TURN 機能で TURN-TCP を有効にした際に利用するポート番号を指定してください
turn_tcp_listen_port = 3478
#
## TURN 機能で TURN-TCP URL 払い出し時のポート番号を指定してください
turn_tcp_port = 3478
#
## TURN 機能で TURN-TCP が成功するまでの待ち時間を指定してください
# この設定はオプションで、デフォルトは 100 ms です
# turn_tcp_allocate_success_delay_time = 100 ms
#
## TURN 機能で TURN-TCP を強制的に利用します
## この機能を有効にした場合は warning ログが出力されます
## この設定はオプションで、デフォルトは false です
 turn_tcp_only = true
#
## TURN 機能で TURN-TLS URL 払い出し機能を有効にするかどうかを指定してください
## この設定はオプションで、デフォルトは false です
# turn_tls = true
#
## TURN 機能で TURN-TLS URL 払い出し機能で利用する FQDN (最後の . なし)を指定してください
## turn_tls_fqdn は turn_fqdn の値を上書きします
# turn_tls_fqdn = sora-turn.example.com
#
## TURN 機能で TURN-TLS URL 払い出し機能を有効にした際に利用するポート番号を指定してください
# turn_tls_port = 5349
#
## TURN 機能で TURN-TLS を強制的に利用します
## この機能を有効にした場合は warning ログが出力されます
## この設定はオプションで、デフォルトは false です
# turn_tls_only = true
#
## RTX 機能を有効にするかどうかを指定してください
## この設定はオプションで、デフォルトは true です
# rtx = false
#
## ULPFEC 機能を有効にするかどうかを指定してください
## この設定はオプションで、デフォルトは false です
# ulpfec = true
#
## 音声で RED 機能を有効にするかどうかを指定してください
## この設定はオプションで、デフォルトは false です
# audio_red = true
#
## Generic NACK を有効にするかどうかを指定してください
# generic_nack = true
#
## 音声のビットレートを指定してください
## 64 であれば 64kbps が利用可能な最大ビットレートとなります
# default_audio_bit_rate = 64
#
## 映像のビットレートを指定してください
## 800 であれば 800kbps が利用可能な最大ビットレートとなります
# default_video_bit_rate = 800
#
## サイマルキャスト受信のデフォルト rid 値を指定します
## "r0" 、"r1" 、 "r2" のどれかを指定してください
## この設定はオプションで、デフォルトは "r0" です
# default_simulcast_rid = r0
#
## RTP Forwarding API を利用時のクライアントに PLI を送る間隔を指定します
## 10 s であれば 10 秒間隔で PLI 送ることで I フレームが 10 秒間隔で送られてくるようになります
# default_forwarding_pli_interval = 10 s
#
## サイマルキャスト転送時のストリームを指定します
## single: 最も優先度の低いストリームのみを転送 (デフォルト)
## all:    すべてのストリームを転送
# forwarding_simulcast = single
#
## SDP の offer 時に払い出される origin の username を隠蔽するかどうかを指定してください
## true の場合は origin の username が "-" として払い出されます
# hide_origin_username = true
#
## スポットライトで同時にフォーカスされる数のデフォルトの値を指定します
## この設定はオプションで、デフォルトは 1 です
# default_spotlight_number = 1
#
## スポットライトでフォーカス時に受信する rid のデフォルト値を指定します
## 指定可能な値は none, r0, r1, r2 です
## この設定はオプションで、 デフォルトは r1 です
# default_spotlight_focus_rid = r1
#
## スポットライトでアンフォーカス時に受信する rid のデフォルト値を指定します
## 指定可能な値は none, r0, r1, r2 です
## この設定はオプションで、 デフォルトは r0 です
# default_spotlight_unfocus_rid = r0
#
## スポットライト利用時の遅延フォーカスの有無を指定します
## この設定はオプションで、デフォルトは true です
# default_spotlight_delayed_focus = false
#
## スポットライト機能の遅延フォーカスの遅延幅
## この設定はオプションで、デフォルトは 2000 ミリ秒です
# default_spotlight_delayed_focus_interval = 2000 ms
#
## スポットライト利用時のフォーカスなし音声転送の有無を指定します
## この設定はオプションで、デフォルトは true です
# default_spotlight_unfocus_audio = false
#
## スポットライト利用時のフォーカスなし音声転送のレート制限を指定します。
## 指定可能な値は 0 から 5 までの整数です
## この設定はオプションで、デフォルトは 2 です
# default_spotlight_unfocus_audio_rate_limit = 2
#
## スポットライト利用時の自動アンフォーカスの有無を指定します。
## この設定はオプションで、デフォルトは true です
# default_spotlight_auto_unfocus = false
#
## スポットライト機能の自動アンフォーカスの時間間隔を指定します
## この設定はオプションで、デフォルトは 10 秒です
# default_spotlight_auto_unfocus_interval = 10 s
#
## スポットライト機能でフォーカスしてからアンフォーカスされるまでの最低時間間隔を指定します
## この設定はオプションで、デフォルトは 2000 ミリ秒です
# default_spotlight_focus_min_interval = 2000 ms
#
## スポットライト利用時のエンコーディングパラメータを JSON ファイル指定します
## 指定しなければ Sora のデフォルト値を利用します
# spotlight_encodings_file = etc/spotlight_encodings.json
#
## マルチストリームで配信者で利用する映像ビットレートを自動で共有する機能です
## この設定はオプションで、デフォルトは true です
# multistream_auto_sharing_video_bit_rate = true
#
## ユーザーエージェントの統計情報を取得しサーバに溜め込みます
# user_agent_stats = true
#
## ICE コネクションステートが connecting から disconnected の状態に移行するまでの時間を指定します
# ice_connection_state_disconnected_timeout = 5 s
#
## ICE コネクションステートが disconnected から failed の状態に移行するまでの時間を指定します
# ice_connection_state_failed_timeout = 10 s
#
## サイマルキャスト利用時のエンコーディングパラメータを JSON ファイル指定します
## 指定しなければ Sora のデフォルト値を利用します
# simulcast_encodings_file = etc/simulcast_encodings.json
#
## E2EE の利用を許可するかどうかを指定します
## この設定はオプションで、デフォルトは false です
# e2ee = true
#
## 統計コレクターの URL を指定します
# stats_collector_url = http://192.0.2.10:5890/collector
#
## 統計エクスポーターの数を指定します
## この設定はオプションで、デフォルトは 5 です
# stats_exporter_number = 10
#
## 統計エクスポーターで mTLS を利用する場合のクライアント証明書を指定します
## 中間証明書も含めた PEM 形式のファイルを指定して下さい
# stats_exporter_tls_fullchain_file = /path/to/fullchain.pem
#
## 統計エクスポーターで mTLS を利用する場合のクライアントの秘密鍵を指定します
## パスフレーズはなしで PEM 形式のファイルを指定して下さい
# stats_exporter_tls_privkey_file = /path/to/privkey.pem
#
## 統計エクスポーターで HTTPS (h2) でサーバ証明書を検証する CA 証明書を指定します
## 指定しない場合は HTTPS を利用してもサーバ証明書を検証しません
# stats_exporter_tls_verify_cacert_file = /path/to/CA.pem
#
## クラスター機能を利用するかどうかを指定します
# cluster = true
#
## クラスター機能で利用するノード名を指定します
# node_name = sora@192.0.2.10
#
## このノードに対する、クライアントからアクセス可能なシグナリング URL を指定します
## クラスター機能のリダイレクト時に用います
# external_signaling_url = ws://127.0.0.1:5000/signaling
#
## このノードに対する、API 実行環境からアクセス可能な API URL を指定します
## クラスター機能のリダイレクト時に用います
# external_api_url = http://127.0.0.1:3000/
#
## クラスターが有効な時、起動時に自動で JoinCluster を試行するノード名のリストを指定します
## カンマ区切りで指定してください
# contact_node_name_list = sora11@192.0.2.11, sora12@192.0.2.12
#
## クラスター機能のノード間通信用の Listen ポート範囲を指定します
## この範囲のポート番号は他ノードからの TCP 接続を許可する必要があります。
# cluster_listen_min_port = 49010
# cluster_listen_max_port = 49020
#
## クラスター機能有効時に、ノードがクラスタから分断した場合に、自動で再接続を試みるかどうかを指定します
## この設定はオプションで、デフォルトは true です
# cluster_auto_reconnect = false
#
## WebRTC の接続が確立するまでの許容時間を指定してください
# connection_created_wait_timeout = 30 s
#
## API の戻り値に含まれるセンシティブなデータを "REDACTED" に書き換えて出力するかどうかを指定します
## この設定はオプションで、デフォルトは true です
# redact_api_sensitive_data = false
#
## 録画メタデータに含まれるセンシティブなデータを "REDACTED" に書き換えて出力するかどうかを指定します
## この設定はオプションで、デフォルトは true です
# redact_archive_metadata_sensitive_data = false
#
## 分割録画のファイルとイベントウェブフックの type について、以前のプレフィックスを使うかを指定します
## デフォルト値は false で新しい(sora 2022.1 以降)のプレフィックスを使います
# split_archive_legacy_prefix = true
#
## デフォルトでマルチストリームを利用するかどうかを指定します
## この設定はオプションで、デフォルトは true です
## この設定は 2023 年 6 月リリース予定の Sora で廃止されます
# default_multistream = false
#
## RTP パケロスシミュレータは注意して利用してください
# rtp_packet_loss_simulator_incoming = 0
# rtp_packet_loss_simulator_outgoing = 0
#
## DataChannel パケロスシミュレータは注意して利用してください
# data_channel_packet_loss_simulator_incoming = 0
# data_channel_packet_loss_simulator_outgoing = 0
#